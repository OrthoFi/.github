name: Build
on:
  push:
    branches: ["**"]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Tools
        run: dotnet tool install -g Amazon.ElasticBeanstalk.Tools

      - name: Dependencies
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/OrthoFi/index.json -n GitHub -u OrthoFi -p ${{ secrets.BUILD_GITHUB_TOKEN }} --store-password-in-clear-text
          dotnet nuget add source ${{ secrets.MYGET_FEED }} -n OrthoFi -u ${{ secrets.MYGET_USER }} -p ${{ secrets.MYGET_API_KEY }} --store-password-in-clear-text

      - name: Build
        run: dotnet build --nologo -c Release

      - name: Test
        run: dotnet test --no-build -c Release --nologo -r out_tests --collect:"XPlat Code Coverage"

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: tests
          path: out_tests

      - name: Package Beanstalk
        run: dotnet eb package -pl ./Api -o ./artifacts/beanstalk.zip

      - name: Upload Beanstalk Zip
        uses: actions/upload-artifact@v2
        with:
          name: beanstalk
          path: ./artifacts/beanstalk.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.OCKERS_BUILD_ROLE }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Repository Name
        id: repo
        shell: pwsh
        run: |
          $name = "${{ github.repository }}".Replace("${{ github.repository_owner }}/", "")
          Write-Host "::set-output name=name::$name"

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ steps.repo.outputs.name }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build Container Image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./Lambdas
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
