name: Build
on:
  push:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      environment:
        description: Environment

env:
  NODE_VERSION: 18
  MYGET_API_KEY: ${{ secrets.MYGET_API_KEY }}

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.verify.outputs.environment }}
    steps:
      - name: Set Target Environment
        id: environment
        uses: orthofi/actions-set-target-environment@v1
        with:
          environment-name: ${{ github.event.inputs.environment }}
      - name: Verify Environment
        id: verify
        uses: orthofi/actions-verify-environment@v1
        with:
          environment: ${{ steps.environment.outputs.target-environment }}
          token: ${{ secrets.BUILD_GITHUB_TOKEN }}
          dont-fail-build: true

  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare Angular
        uses: orthofi/actions-prepare-angular@v1

  test:
    name: Test
    needs: [dependencies, init]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare Angular
        uses: orthofi/actions-prepare-angular@v1

      - name: Tests - Karma
        run: npm run test


  lint:
    name: Lint
    needs: [dependencies, init]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare Angular
        uses: orthofi/actions-prepare-angular@v1

      - name: Lint
        run: npm run lint

  build:
    name: Build
    needs: [init, lint, test]
    runs-on: ubuntu-latest
    if: needs.init.outputs.environment
    env:
      APP_ENV_NAME: ${{ needs.init.outputs.environment }}
    steps:
      - name: Build Angular app
        id: build
        uses: orthofi/actions-angular-build@v1
        with:
          repository: OrthoFi/template
          app-name: template
          target-environment: ${{ env.APP_ENV_NAME }}
          aws-role-dev: ${{ secrets.OCKERS_BUILD_ROLE }}
          aws-role-prod: ${{ secrets.PRODUCTION_BUILD_ROLE }}
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

  deploy:
    name: Deploy
    needs: [init, build]
    runs-on: ubuntu-latest
    if: ${{ needs.init.outputs.environment }}
    environment: ${{ needs.init.outputs.environment }}
    env:
      APP_ENV_NAME: ${{ needs.init.outputs.environment }}
    steps:
      - name: Deploy Angular app
        id: deploy
        uses: orthofi/actions-angular-deploy@v1
        with:
          repository: OrthoFi/template
          app-name: template
          target-environment: ${{ env.APP_ENV_NAME }}
          aws-role-dev: ${{ secrets.OCKERS_BUILD_ROLE }}
          aws-role-prod: ${{ secrets.PRODUCTION_BUILD_ROLE }}
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
